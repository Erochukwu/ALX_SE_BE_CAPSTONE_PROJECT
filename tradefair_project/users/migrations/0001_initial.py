# Generated by Django 4.2.16 on 2025-10-24 16:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_vendor', models.BooleanField(default=False, help_text='Designates whether the user is a vendor.')),
                ('first_name', models.CharField(help_text="The user's first name.", max_length=150)),
                ('last_name', models.CharField(help_text="The user's last name.", max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(choices=[('CB', 'Clothings and Beddings'), ('EC', 'Electronics and Computer wares'), ('FB', 'Food and Beverages'), ('JA', 'Jewelry and Accessories')], help_text='Category/domain of the shed.', max_length=2)),
                ('business_name', models.CharField(help_text="The name of the vendor's business.", max_length=100)),
                ('description', models.TextField(blank=True, help_text="A description of the vendor's business (optional).")),
                ('shed_number', models.PositiveIntegerField(help_text='Unique shed number (1-100) within the domain.', unique=True)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(help_text='The user account linked to this vendor profile.', on_delete=django.db.models.deletion.CASCADE, related_name='vendor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vendor Profile',
                'verbose_name_plural': 'Vendor Profiles',
            },
        ),
        migrations.AddConstraint(
            model_name='vendorprofile',
            constraint=models.UniqueConstraint(fields=('domain', 'shed_number'), name='unique_shed_per_domain'),
        ),
    ]
